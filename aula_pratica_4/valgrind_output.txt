Script started on 2024-11-16 12:36:14-03:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="179" LINES="22"]
[?2004h]0;andrew@andrew-vaio: ~/Documents/Facul/ESTRUTURA_DE_DADOS/ufmg-estrutura-de-dados/TP4[01;32mandrew@andrew-vaio[00m:[01;34m~/Documents/Facul/ESTRUTURA_DE_DADOS/ufmg-estrutura-de-dados/TP4[00m$ exitvalgrind -q ./bad exit[Kgdb ./badscript valgrind_output.txtvalgrind -q --vgdb-error=0 ./bad cd TP4/[Kvalgrind -q --vgdb-error=0 ./bad gdb ./bad [K[23@valgrind -q --vgdb-error=0[C[C[C[C[C[C[Cgdb ./bad [K[8@valgrind -q[C[C[C[C[C[C[C
[?2004l==16331== Use of uninitialised value of size 8
==16331==    at 0x109268: setup_foo (main.c:15)
==16331==    by 0x1092DF: main (main.c:25)
==16331== 
==16331== Invalid write of size 8
==16331==    at 0x109268: setup_foo (main.c:15)
==16331==    by 0x1092DF: main (main.c:25)
==16331==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==16331== 
==16331== 
==16331== Process terminating with default action of signal 11 (SIGSEGV)
==16331==  Access not within mapped region at address 0x0
==16331==    at 0x109268: setup_foo (main.c:15)
==16331==    by 0x1092DF: main (main.c:25)
==16331==  If you believe this happened as a result of a stack
==16331==  overflow in your program's main thread (unlikely but
==16331==  possible), you can try to increase the size of the
==16331==  main thread stack using the --main-stacksize= flag.
==16331==  The main thread stack size used in this run was 8388608.
Segmentation fault (core dumped)
[?2004h]0;andrew@andrew-vaio: ~/Documents/Facul/ESTRUTURA_DE_DADOS/ufmg-estrutura-de-dados/TP4[01;32mandrew@andrew-vaio[00m:[01;34m~/Documents/Facul/ESTRUTURA_DE_DADOS/ufmg-estrutura-de-dados/TP4[00m$ r[Kexot[K[Kit
[?2004lexit

Script done on 2024-11-16 12:36:30-03:00 [COMMAND_EXIT_CODE="139"]
